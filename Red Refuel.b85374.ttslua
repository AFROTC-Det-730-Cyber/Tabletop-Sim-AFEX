function onLoad()
  self.attachInvisibleHider("hide", true, {"Blue"})
  self.setDescription("50")
end
-- decrement fuel level at end of each turn
function onPlayerTurnEnd(player_color_end, player_color_next)
  -- body...
  if player_color_end == "Red" then
    self.setDescription(self.getDescription() - 1)
    if self.getDescription() == "0" then
      print(self.getName() .. " ran out of fuel")
      self.destruct()
    end
  end
end
-- refueling function
function filterObjectEnter(object)
  -- body...
  -- if fighter
  if object.getName() == "Red Fighter" then
    print("Red Fighter goes inside here")
    objFuel = object.getDescription()
    print(objFuel)
    difference = 6 - objFuel -- calculated differnece between current and max fuel
    object.setDescription("6") -- resets objects fuel
    self.setDescription(self.getDescription() - difference) -- subtracts the difference from refuelers current fuel
    return true
  end
  if object.getName() == "Red Bomber" then
    print("Red Bomber Goes inside here")
    objFuel = object.getDescription()
    print(objFuel)
    difference = 20 - objFuel
    object.setDescription("20")
    self.setDescription(self.getDescription() - difference) -- subtracts the difference from refuelers current fuel
    return true
  end
  if object.getName() == "Red ISR" then
    print("Red ISR Goes inside here")
    objFuel = object.getDescription()
    print(objFuel)
    difference = 10 - objFuel
    object.setDescription("10")
    self.setDescription(self.getDescription() - difference) -- subtracts the difference from refuelers current fuel
    return true
  end
  print("Doesn't go inside here")
  return false
end

function onObjectDrop()
 findByDistance()
end
--Lists any figurine within 5 units of the tool.
function findByDistance()
    local hexSize = 3
    --print("[b]---Find By Distance---[/b]")
    --This is very similar to how we did findByTag()
    --We are also using tag to narrow it down, which isn't strictly necessary
    local allObjects = getAllObjects()
    local foundFigurine = false
    self.attachInvisibleHider("hide", true, {"Blue"})

    for _, object in ipairs(allObjects) do
            --I have a pre-written function to get distance to objects
          local distance = findProximity(object.getPosition(), self)
            --print("Distance" .. distance)
            --Here is the check for distance
            if distance <= 6 * hexSize and object.getName() == "Blue Bomber" then
              --print(object.getName() .. " found. Revealing")
              self.attachInvisibleHider("hide", false, {"Blue"})
              foundFigurine = true
            end
            if distance <= 3 * hexSize and object.getName() == "Blue Fighter" then
              --print(object.getName() .. " found. Revealing")
              self.attachInvisibleHider("hide", false, {"Blue"})
              foundFigurine = true
            end
            if distance <= 10 * hexSize and object.getName() == "Blue ISR" then
              --print(object.getName() .. " found. Revealing")
              self.attachInvisibleHider("hide", false, {"Blue"})
              foundFigurine = true
            end
            if distance <= 4 * hexSize and object.getName() == "Blue Refuel" then
              --print(object.getName() .. " found. Revealing")
              self.attachInvisibleHider("hide", false, {"Blue"})
              foundFigurine = true
            end
            if distance <= 7 * hexSize and object.getName() == "Blue Base" then
              --print(object.getName() .. " found. Revealing")
              self.attachInvisibleHider("hide", false, {"Blue"})
              foundFigurine = true
            end
            if distance <= 4 * hexSize and object.getName() == "Blue SAM Site" then
              --print(object.getName() .. " found. Revealing")
              self.attachInvisibleHider("hide", false, {"Blue"})
              foundFigurine = true
            end
            if distance <= 3 * hexSize  and object.getName() == "Blue Airfield" then
              --print(object.getName() .. " found. Revealing")
              self.attachInvisibleHider("hide", false, {"Blue"})
              foundFigurine = true
            end
    end
    --print("[b]-------------------------[/b]")
end


--Used by findByDistance
function findProximity(targetPos, object)
    local objectPos = object.getPosition()
    local xDistance = math.abs(targetPos.x - objectPos.x)
    local zDistance = math.abs(targetPos.z - objectPos.z)
    local distance = xDistance^2 + zDistance^2
    return math.sqrt(distance)
end